// Code generated by "stringer -type Kind -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[Error-1]
	_ = x[Comment-2]
	_ = x[Separator-3]
	_ = x[At-4]
	_ = x[Ident-5]
	_ = x[Eq-6]
	_ = x[Text-7]
	_ = x[URL-8]
	_ = x[OpenInterp-9]
	_ = x[CloseInterp-10]
	_ = x[Name-11]
	_ = x[Prompt-12]
	_ = x[Timeout-13]
	_ = x[ConnectionTimeout-14]
	_ = x[NoRedirect-15]
	_ = x[MethodGet-16]
	_ = x[MethodHead-17]
	_ = x[MethodPost-18]
	_ = x[MethodPut-19]
	_ = x[MethodDelete-20]
	_ = x[MethodConnect-21]
	_ = x[MethodPatch-22]
	_ = x[MethodOptions-23]
	_ = x[MethodTrace-24]
}

const _Kind_name = "EOFErrorCommentSeparatorAtIdentEqTextURLOpenInterpCloseInterpNamePromptTimeoutConnectionTimeoutNoRedirectMethodGetMethodHeadMethodPostMethodPutMethodDeleteMethodConnectMethodPatchMethodOptionsMethodTrace"

var _Kind_index = [...]uint8{0, 3, 8, 15, 24, 26, 31, 33, 37, 40, 50, 61, 65, 71, 78, 95, 105, 114, 124, 134, 143, 155, 168, 179, 192, 203}

func (i Kind) String() string {
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}

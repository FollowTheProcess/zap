// Code generated by "stringer -type Kind -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[Error-1]
	_ = x[Comment-2]
	_ = x[Separator-3]
	_ = x[At-4]
	_ = x[Ident-5]
	_ = x[Eq-6]
	_ = x[Colon-7]
	_ = x[Text-8]
	_ = x[URL-9]
	_ = x[Header-10]
	_ = x[OpenInterp-11]
	_ = x[CloseInterp-12]
	_ = x[Name-13]
	_ = x[Prompt-14]
	_ = x[Timeout-15]
	_ = x[ConnectionTimeout-16]
	_ = x[NoRedirect-17]
	_ = x[MethodGet-18]
	_ = x[MethodHead-19]
	_ = x[MethodPost-20]
	_ = x[MethodPut-21]
	_ = x[MethodDelete-22]
	_ = x[MethodConnect-23]
	_ = x[MethodPatch-24]
	_ = x[MethodOptions-25]
	_ = x[MethodTrace-26]
}

const _Kind_name = "EOFErrorCommentSeparatorAtIdentEqColonTextURLHeaderOpenInterpCloseInterpNamePromptTimeoutConnectionTimeoutNoRedirectMethodGetMethodHeadMethodPostMethodPutMethodDeleteMethodConnectMethodPatchMethodOptionsMethodTrace"

var _Kind_index = [...]uint8{0, 3, 8, 15, 24, 26, 31, 33, 38, 42, 45, 51, 61, 72, 76, 82, 89, 106, 116, 125, 135, 145, 154, 166, 179, 190, 203, 214}

func (i Kind) String() string {
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
